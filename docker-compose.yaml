version: '3.8'

services:

  kafka:
    # https://github.com/bitnami/containers/blob/main/bitnami/kafka/README.md
    image: bitnami/kafka:latest
    networks:
      - udaconnect
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    healthcheck:
      test: ["CMD", "bash", "-c", "/opt/bitnami/kafka/bin/kafka-topics.sh --list --bootstrap-server localhost:9092"]
      interval: 15s
      timeout: 10s
      retries: 5
      
  kafka-init:
    # init kafka client container to create topic and then exit
    image: bitnami/kafka:latest
    networks:
      - udaconnect
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    depends_on:
      kafka:
        condition: service_healthy
    command: /opt/bitnami/kafka/bin/kafka-topics.sh --create --topic locations --bootstrap-server kafka:9092

  postgres:
    image: postgres:16
    restart: always
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=secret
      - POSTGRES_DB=udaconnect
    networks:
      - udaconnect
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d udaconnect"]
      interval: 5s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4:latest
    networks:
      - udaconnect
    environment:
      - PGADMIN_DEFAULT_EMAIL=user@domain.com
      - PGADMIN_DEFAULT_PASSWORD=secret
      - PGADMIN_CONFIG_CONSOLE_LOG_LEVEL=5
    ports:
      - 8081:80
    depends_on:
      postgres:
        condition: service_healthy

  person-service:
    image: udaconnect-ms-person-service:latest
    build: ./applications/udaconnect-ms-person-service
    networks:
      - udaconnect
    environment:
      - DB_USER=admin
      - DB_PASSWORD=secret
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=udaconnect
    depends_on:
      postgres:
        condition: service_healthy

  location-service:
    image: udaconnect-ms-location-service:latest
    build: ./applications/udaconnect-ms-location-service
    networks:
      - udaconnect
    environment:
      - DB_USER=admin
      - DB_PASSWORD=secret
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=udaconnect
      - KAFKA_TOPIC=locations
      - KAFKA_SERVER=kafka:9092
      - KAFKA_GROUP_ID=locations-group
      - CYCLE_TIME=60
    depends_on:
      kafka-init:
        condition: service_completed_successfully
      postgres:
        condition: service_healthy

  exposure-service:
    image: udaconnect-ms-exposure-service:latest
    build: ./applications/udaconnect-ms-exposure-service
    networks:
    - udaconnect
    environment:
      - DB_USER=admin
      - DB_PASSWORD=secret
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=udaconnect
      - CYCLE_TIME=60
    depends_on:
      postgres:
        condition: service_healthy

  person-api:
    image: udaconnect-ms-person-api:latest
    build: ./applications/udaconnect-ms-person-api
    networks:
      - udaconnect
    ports:
      - 8001:80
    environment:
      - gRPC_HOST=person-service
      - gRPC_PORT=5005
    depends_on:
      person-service:
        condition: service_started

  location-api:
    image: udaconnect-ms-location-api:latest
    build: ./applications/udaconnect-ms-location-api
    environment:
      - DB_USER=admin
      - DB_PASSWORD=secret
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=udaconnect
      - KAFKA_SERVER=kafka:9092
      - KAFKA_TOPIC=locations
    ports:
      - 8002:80
    networks:
      - udaconnect
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_healthy

networks:
  udaconnect:
    driver: bridge