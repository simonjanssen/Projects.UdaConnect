version: '3.8'

services:
  kafka:
    # https://github.com/bitnami/containers/blob/main/bitnami/kafka/README.md
    image: bitnami/kafka:latest
    networks:
      - udaconnect-ms
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    ports:
      - 9094:9094
  
  kafka-init:
    # init kafka client container to create topic and then exit
    image: bitnami/kafka:latest
    networks:
      - udaconnect-ms
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    depends_on:
      - kafka
    command: /opt/bitnami/kafka/bin//kafka-topics.sh --create --topic locations --bootstrap-server kafka:9092

  postgres:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: udaconnect
    networks:
      - udaconnect-ms
    ports:
      - 5432:5432

  pgadmin:
    image: dpage/pgadmin4:latest
    networks:
      - udaconnect-ms
    environment:
      PGADMIN_DEFAULT_EMAIL: user@domain.com
      PGADMIN_DEFAULT_PASSWORD: secret
    ports:
      - 8081:80
    depends_on:
      - postgres
  
  udaconnect-ms-location-api:
    image: udaconnect-ms-location-api:latest
    environment:
      DB_USER: admin
      DB_PASSWORD: secret
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: udaconnect
      KAFKA_SERVER: kafka:9092
      KAFKA_TOPIC: locations
    ports:
      - 8080:80
    networks:
      - udaconnect-ms
    depends_on:
      - kafka
      - postgres
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 5
        delay: 15s
        window: 60s

    healthcheck:
      test: ["CMD", "curl", "-X", "'GET'", "'http://localhost:8080/locations/1'", "-H", "'accept: application/json'"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 30s

networks:
  udaconnect-ms:
    driver: bridge