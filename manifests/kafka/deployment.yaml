apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
        - name: kafka
          image: bitnami/kafka:latest
          imagePullPolicy: IfNotPresent
          readinessProbe:
            exec:
              command: ["/bin/bash", "-c", "/opt/bitnami/kafka/bin/kafka-topics.sh --list --bootstrap-server localhost:9092"]
            initialDelaySeconds: 30
            periodSeconds: 5
          volumeMounts:
            - mountPath: /bitnami/kafka
              name: kafkadata
          env:
            - name: KAFKA_CFG_NODE_ID
              valueFrom:
                configMapKeyRef:
                  name: udaconnect-env
                  key: KAFKA_CFG_NODE_ID
            - name: KAFKA_CFG_PROCESS_ROLES
              valueFrom:
                configMapKeyRef:
                  name: udaconnect-env
                  key: KAFKA_CFG_PROCESS_ROLES
            - name: KAFKA_CFG_LISTENERS
              valueFrom:
                configMapKeyRef:
                  name: udaconnect-env
                  key: KAFKA_CFG_LISTENERS
            - name: KAFKA_CFG_ADVERTISED_LISTENERS
              valueFrom:
                configMapKeyRef:
                  name: udaconnect-env
                  key: KAFKA_CFG_ADVERTISED_LISTENERS
            - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
              valueFrom:
                configMapKeyRef:
                  name: udaconnect-env
                  key: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
            - name: KAFKA_CFG_CONTROLLER_QUORUM_VOTERS
              valueFrom:
                configMapKeyRef:
                  name: udaconnect-env
                  key: KAFKA_CFG_CONTROLLER_QUORUM_VOTERS                       
            - name: KAFKA_CFG_CONTROLLER_LISTENER_NAMES
              valueFrom:
                configMapKeyRef:
                  name: udaconnect-env
                  key: KAFKA_CFG_CONTROLLER_LISTENER_NAMES   



      volumes:
        - name: kafkadata
          persistentVolumeClaim:
            claimName: kafka-pvc